{"version":3,"sources":["components/NewContactForm.js","components/Contact.js","components/Contacts.js","components/Filter.js","api/persons.js","components/Notification.js","App.js","index.js"],"names":["NewContactForm","values","events","onSubmit","onSubmitContact","value","newName","onChange","onNameChange","newNumber","onNumberChange","type","Contact","person","onRemoveClick","name","number","onClick","id","Contacts","persons","keyword","key","trim","toLowerCase","contacts","filter","_","includes","map","nanoid","Filter","onKeywordInput","onInput","baseUrl","ErrorMessage","message","className","SuccessMessage","App","useState","setPersons","successMessage","setSuccessMessage","errorMessage","setErrorMessage","setNewName","setNewNumber","setKeyword","useEffect","axios","get","then","data","evt","target","preventDefault","existContact","find","undefined","window","confirm","put","updatedContact","catch","setTimeout","post","create","newContact","contact","delete","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff4d994a.chunk.js","sourcesContent":["import React from 'react'\n\nconst NewContactForm = ({values, events}) => {\n  return (\n    <form onSubmit={events.onSubmitContact}>\n      <div>name: <input value={values.newName} onChange={events.onNameChange}/></div>\n      <div>number: <input value={values.newNumber} onChange={events.onNumberChange} /></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nexport default NewContactForm\n","import React from 'react'\n\nconst Contact = ({person, onRemoveClick}) => (\n  <li>{person.name} {person.number}<button type=\"button\" onClick={() => onRemoveClick(person.id)}>delete</button></li>\n)\n\nexport default Contact\n","import React from 'react'\nimport Contact from \"./Contact\";\nimport {nanoid} from 'nanoid'\n\nconst Contacts = ({persons, keyword, onRemoveClick}) => {\n  const key = keyword.trim().toLowerCase()\n  let contacts = [...persons]\n  if (key) {\n    contacts = contacts.filter(_ => _.name.toLowerCase().includes(key) || _.number.toLowerCase().includes(key))\n  }\n  return (\n    <div>\n      {\n        contacts.map((_) => <Contact person={_} onRemoveClick={onRemoveClick} key={nanoid()} />)\n      }\n    </div>\n  )\n}\n\nexport default Contacts\n","import React from 'react'\n\nconst Filter = ({keyword, onKeywordInput}) => {\n  return (\n    <div>Filter shown with <input value={keyword} onInput={onKeywordInput}/></div>\n  )\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nexport const getAll = () => {\n  return axios.get(baseUrl).then(_ => _.data)\n}\n\nexport const create = person => {\n  return axios.post(baseUrl, person).then(_ => _.data)\n}\n\nexport const update = (id, person) => {\n  return axios.put(`${baseUrl}/${id}`, person).then(_ => _.data)\n}\n\nexport const remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\n","export const ErrorMessage = ({ message }) => {\n  if (message === '') {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport const SuccessMessage = ({ message }) => {\n  if (message === '') {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport NewContactForm from \"./components/NewContactForm\"\nimport Contacts from \"./components/Contacts\"\nimport Filter from \"./components/Filter\"\nimport {getAll, create, update, remove} from './api/persons'\nimport {ErrorMessage, SuccessMessage} from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [successMessage, setSuccessMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const [newName, setNewName] = useState('')\n  const onNameChange = (evt) => {\n    setNewName(evt.target.value)\n  }\n\n  const [newNumber, setNewNumber] = useState('')\n  const onNumberChange = (evt) => {\n    setNewNumber(evt.target.value)\n  }\n\n  const onSubmitContact = (evt) => {\n    evt.preventDefault()\n    const name = newName.trim()\n    const number = newNumber.trim()\n    if (!name || !number) return\n    const existContact = persons.find(_ => _.name.toLowerCase() === name.toLowerCase())\n    if (existContact !== undefined && window.confirm(`${existContact.name} is already added to phonebook,replace the old number with a new one?`)) {\n      update(existContact.id, {...existContact, number}).then(updatedContact => {\n        setPersons(persons.map(_ => _.id === existContact.id ? updatedContact : _))\n        setNewName('')\n        setNewNumber('')\n      }).catch(_ => {\n        setErrorMessage(`Information of ${existContact.name} has already been removed from server.`)\n        setPersons(persons.filter(_ => _.id !== existContact.id))\n        setTimeout(() => setErrorMessage(''), 3000)\n      })\n    } else {\n      create({\n        name, number,\n      }).then(newContact => {\n        setPersons([...persons, newContact])\n        setNewName('')\n        setNewNumber('')\n        setSuccessMessage(`Added ${name}`)\n        setTimeout(() => setSuccessMessage(''), 3000)\n      })\n    }\n  }\n\n  const [keyword, setKeyword] = useState('')\n  const onKeywordInput = (evt) => {\n    setKeyword(evt.target.value)\n  }\n  const onRemoveClick = (id) => {\n    const contact = persons.find(_ => _.id === id)\n    if (contact !== undefined && window.confirm(`Delete ${contact.name}?`)) {\n      remove(id).then(() => {\n        setPersons(persons.filter(_ => _.id !== id))\n      })\n    }\n  }\n\n  useEffect(() => {\n    getAll()\n      .then(_ => {\n        setPersons(_)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorMessage message={errorMessage}/>\n      <SuccessMessage message={successMessage}/>\n      <Filter keyword={keyword} onKeywordInput={onKeywordInput}/>\n      <h3>Add a new</h3>\n      <NewContactForm values={{newName, newNumber}} events={{onNameChange, onNumberChange, onSubmitContact}}/>\n      <h3>Numbers</h3>\n      <Contacts persons={persons} keyword={keyword} onRemoveClick={onRemoveClick}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}