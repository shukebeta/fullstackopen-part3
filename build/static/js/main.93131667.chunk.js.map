{"version":3,"sources":["components/NewContactForm.js","components/Contact.js","components/Contacts.js","components/Filter.js","api/persons.js","components/Notification.js","App.js","index.js"],"names":["NewContactForm","values","events","onSubmit","onSubmitContact","value","newName","onChange","onNameChange","newNumber","onNumberChange","type","Contact","person","onRemoveClick","name","number","onClick","id","Contacts","persons","keyword","key","trim","toLowerCase","contacts","filter","_","includes","map","nanoid","Filter","onKeywordInput","onInput","baseUrl","create","axios","post","then","data","ErrorMessage","message","className","SuccessMessage","App","useState","setPersons","successMessage","setSuccessMessage","errorMessage","setErrorMessage","setNewName","setNewNumber","evt","a","preventDefault","undefined","existContact","find","window","confirm","put","updatedContact","response","error","setTimeout","newContact","setKeyword","useEffect","get","target","contact","delete","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93131667.chunk.js","sourcesContent":["import React from 'react'\n\nconst NewContactForm = ({values, events}) => {\n  return (\n    <form onSubmit={events.onSubmitContact}>\n      <div>name: <input value={values.newName} onChange={events.onNameChange}/></div>\n      <div>number: <input value={values.newNumber} onChange={events.onNumberChange} /></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nexport default NewContactForm\n","import React from 'react'\n\nconst Contact = ({person, onRemoveClick}) => (\n  <li>{person.name} {person.number}<button type=\"button\" onClick={() => onRemoveClick(person.id)}>delete</button></li>\n)\n\nexport default Contact\n","import React from 'react'\nimport Contact from \"./Contact\";\nimport {nanoid} from 'nanoid'\n\nconst Contacts = ({persons, keyword, onRemoveClick}) => {\n  const key = keyword.trim().toLowerCase()\n  let contacts = [...persons]\n  if (key) {\n    contacts = contacts.filter(_ => _.name.toLowerCase().includes(key) || _.number.toLowerCase().includes(key))\n  }\n  return (\n    <div>\n      {\n        contacts.map((_) => <Contact person={_} onRemoveClick={onRemoveClick} key={nanoid()} />)\n      }\n    </div>\n  )\n}\n\nexport default Contacts\n","import React from 'react'\n\nconst Filter = ({keyword, onKeywordInput}) => {\n  return (\n    <div>Filter shown with <input value={keyword} onInput={onKeywordInput}/></div>\n  )\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nexport const getAll = () => {\n  return axios.get(baseUrl).then(_ => _.data)\n}\n\nexport const create = person => {\n  return axios.post(baseUrl, person).then(_ => _.data)\n}\n\nexport const update = (id, person) => {\n  return axios.put(`${baseUrl}/${id}`, person).then(_ => _.data)\n}\n\nexport const remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\n","export const ErrorMessage = ({ message }) => {\n  if (message === '') {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport const SuccessMessage = ({ message }) => {\n  if (message === '') {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport NewContactForm from \"./components/NewContactForm\"\nimport Contacts from \"./components/Contacts\"\nimport Filter from \"./components/Filter\"\nimport {getAll, create, update, remove} from './api/persons'\nimport {ErrorMessage, SuccessMessage} from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [successMessage, setSuccessMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const [newName, setNewName] = useState('')\n  const onNameChange = (evt) => {\n    setNewName(evt.target.value)\n  }\n\n  const [newNumber, setNewNumber] = useState('')\n  const onNumberChange = (evt) => {\n    setNewNumber(evt.target.value)\n  }\n\n  const onSubmitContact = async (evt) => {\n    evt.preventDefault()\n    const name = newName.trim()\n    const number = newNumber.trim()\n    if (!name || !number) return\n    const existContact = persons.find(_ => _.name.toLowerCase() === name.toLowerCase())\n    if (existContact !== undefined && window.confirm(`${existContact.name} is already added to phonebook,replace the old number with a new one?`)) {\n      try {\n        const updatedContact = await update(existContact.id, {...existContact, number})\n        setPersons(persons.map(_ => _.id === existContact.id ? updatedContact : _))\n        setNewName('')\n        setNewNumber('')\n      } catch (e) {\n        setErrorMessage(e.response.data.error)\n        setTimeout(() => setErrorMessage(''), 3000)\n      }\n    } else {\n      create({\n        name, number,\n      }).then(newContact => {\n        setPersons([...persons, newContact])\n        setNewName('')\n        setNewNumber('')\n        setSuccessMessage(`Added ${name}`)\n        setTimeout(() => setSuccessMessage(''), 3000)\n      })\n    }\n  }\n\n  const [keyword, setKeyword] = useState('')\n  const onKeywordInput = (evt) => {\n    setKeyword(evt.target.value)\n  }\n  const onRemoveClick = (id) => {\n    const contact = persons.find(_ => _.id === id)\n    if (contact !== undefined && window.confirm(`Delete ${contact.name}?`)) {\n      remove(id).then(() => {\n        setPersons(persons.filter(_ => _.id !== id))\n      })\n    }\n  }\n\n  useEffect(() => {\n    getAll()\n      .then(_ => {\n        setPersons(_)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorMessage message={errorMessage}/>\n      <SuccessMessage message={successMessage}/>\n      <Filter keyword={keyword} onKeywordInput={onKeywordInput}/>\n      <h3>Add a new</h3>\n      <NewContactForm values={{newName, newNumber}} events={{onNameChange, onNumberChange, onSubmitContact}}/>\n      <h3>Numbers</h3>\n      <Contacts persons={persons} keyword={keyword} onRemoveClick={onRemoveClick}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}